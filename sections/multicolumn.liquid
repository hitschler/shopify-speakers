{{ 'section-multicolumn.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {%if section.settings.custom_padding%}{{ section.settings.custom_padding }}{%else%}{{ section.settings.padding_top | times: 0.75 | round: 0 }}px{%endif%};
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{%- liquid
  assign columns_mobile_int = section.settings.columns_mobile | plus: 0
  assign show_mobile_slider = false
  if section.settings.swipe_on_mobile and section.blocks.size > columns_mobile_int
    assign show_mobile_slider = true
  endif
-%}

<div class="multicolumn color-{{ section.settings.color_scheme }} gradient{% unless section.settings.background_style == 'none' and settings.text_boxes_border_thickness > 0 or settings.text_boxes_shadow_opacity > 0 %} background-{{ section.settings.background_style }}{% endunless %}{% if section.settings.title == blank %} no-heading{% endif %}">
  <div
    class="page-width section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    {% if settings.animations_reveal_on_scroll %}
      data-cascade
    {% endif %}
  >
    {%- unless section.settings.title == blank -%}
      <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin multicolumn__title">
        <h2 class="title inline-richtext {{ section.settings.heading_size }}">
          {{ section.settings.title }}
        </h2>
        {%- if section.settings.button_label != blank and show_mobile_slider -%}
          <a href="{{ section.settings.button_link }}" class="link underlined-link large-up-hide">
            {{- section.settings.button_label | escape -}}
          </a>
        {%- endif -%}
      </div>
    {%- endunless -%}
    <slider-component class="slider-mobile-gutter">
      <ul
        class="multicolumn-list contains-content-container grid grid--{{ section.settings.columns_mobile }}-col-tablet-down grid--{{ section.settings.columns_desktop }}-col-desktop{% if show_mobile_slider %} slider slider--tablet grid--peek{% endif %}"
        id="Slider-{{ section.id }}"
        role="list"
      >
        {%- liquid
          assign highest_ratio = 0
          for block in section.blocks
            if block.settings.image.aspect_ratio > highest_ratio
              assign highest_ratio = block.settings.image.aspect_ratio
            endif
          endfor
        -%}
        {%- for block in section.blocks -%}
          {%- assign empty_column = '' -%}
          {%- if block.settings.image == blank
            and block.settings.title == blank
            and block.settings.text == blank
            and block.settings.link_label == blank
          -%}
            {%- assign empty_column = ' multicolumn-list__item--empty' -%}
          {%- endif -%}
          {% capture css_setting_classes %}
            flex-column 
            {{ block.settings.horizontal_align_mobile }} 
            {{ block.settings.vertical_align_mobile }} 
            {{ block.settings.horizontal_align_desktop }} 
            {{ block.settings.vertical_align_desktop }} 
            {{ block.settings.text_align_mobile }} 
            {{ block.settings.text_align_desktop }}
            {% if block.settings.mobile_order != blank %}grid__item-order-{{ block.settings.mobile_order }}{% endif %}
          {% endcapture %}
          <li
            id="Slide-{{ section.id }}-{{ forloop.index }}"
            class="multicolumn-list__item {{ css_setting_classes }} grid__item{% if section.settings.swipe_on_mobile %} slider__slide{% endif %}{% if section.settings.column_alignment == 'center' %} center{% endif %}{{ empty_column }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
            {{ block.shopify_attributes }}
            {% if settings.animations_reveal_on_scroll %}
              data-cascade
              style="--animation-order: {{ forloop.index }}; --column-span:{{ block.settings.column_span_desktop }}; --column-offset-left:{{ block.settings.column_offset_left_desktop }}; --column-offset-right:{{ block.settings.column_offset_right_desktop }};"
            {% endif %}
          >
            {% if block.type == 'column' %}
              <div class="multicolumn-card content-container">
                {%- if block.settings.image != blank -%}
                  {% if section.settings.image_ratio == 'adapt' or section.settings.image_ratio == 'circle' %}
                    {% assign spaced_image = true %}
                  {% endif %}
                  <div class="multicolumn-card__image-wrapper multicolumn-card__image-wrapper--{{ section.settings.image_width }}-width{% if section.settings.image_width != 'full' or spaced_image %} multicolumn-card-spacing{% endif %}">
                    <div
                      class="media media--transparent media--{{ section.settings.image_ratio }}"
                      {% if section.settings.image_ratio == 'adapt' %}
                        style="padding-bottom: {{ 1 | divided_by: highest_ratio | times: 100 }}%;"
                      {% endif %}
                    >
                      {%- liquid
                        assign number_of_columns = section.settings.columns_desktop
                        assign number_of_columns_mobile = section.settings.columns_mobile
                        assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                        assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                        assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                        if section.settings.image_width == 'half'
                          assign image_width = 0.5
                        elsif section.settings.image_width == 'third'
                          assign image_width = 0.33
                        else
                          assign image_width = 1
                        endif
                      -%}
                      {% capture sizes %}
                        (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                        (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                        (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                        calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                      {% endcapture %}
                      {{
                        block.settings.image
                        | image_url: width: 3200
                        | image_tag:
                          widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                          sizes: sizes,
                          class: 'multicolumn-card__image'
                      }}
                    </div>
                  </div>
                {%- endif -%}
                <div class="multicolumn-card__info">
                  {%- if block.settings.title != blank -%}
                    <h2 class="inline-richtext">{{ block.settings.title }}</h2>
                  {%- endif -%}
                  {%- if block.settings.text != blank -%}
                    <div class="rte">{{ block.settings.text }}</div>
                  {%- endif -%}
                  {%- if block.settings.link_label != blank -%}
                    {%- if block.settings.link_type == 'default' -%}
                      <a
                        class="link animate-arrow"
                        {% if block.settings.link == blank %}
                          role="link" aria-disabled="true"
                        {% else %}
                          href="{{ block.settings.link }}"
                        {% endif %}
                      >
                        {{- block.settings.link_label | escape -}}
                        <span class="icon-wrap">&nbsp;{% render 'icon-arrow' %}</span></a
                      >
                    {%- elsif block.settings.link_type == 'button' -%}
                      <div class="button-wrapper">
                        <a
                          class="button button--primary"
                          {% if block.settings.link == blank %}
                            role="link" aria-disabled="true"
                          {% else %}
                            href="{{ block.settings.link }}"
                          {% endif %}
                        >
                          {{- block.settings.link_label | escape -}}
                        </a>
                        {{ block.settings.button_deco_image | image_url: width: 150 | image_tag }}
                      </div>
                    {%- endif -%}
                  {%- endif -%}
                </div>
              </div>
            {% elsif block.type == 'image' %}
              <div class="multicolumn-image-card block-{{ block.id }}">
                {% style %}
                  .block-{{ block.id }}{
                    {% if block.settings.block_margin_top_mobile %}
                      margin-top: {{ block.settings.block_margin_top_mobile }};
                    {% endif %}
                    {% if block.settings.block_margin_bottom_mobile %}
                      margin-bottom: {{ block.settings.block_margin_bottom_mobile }};
                    {% endif %}
                  }
                  @media screen and (min-width: 750px) {
                    .block-{{ block.id }}{
                      {% if block.settings.block_margin_top_desktop %}
                        margin-top: {{ block.settings.block_margin_top_desktop }};
                      {% else %}
                        margin-top:0;
                      {% endif %}
                      {% if block.settings.block_margin_bottom_desktop %}
                        margin-bottom: {{ block.settings.block_margin_bottom_desktop }};
                      {% else %}
                        margin-bottom:0;
                      {% endif %}
                    }
                  }
                {% endstyle %}
                {% capture sizes %}
                  (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                  (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                  (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                  calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                {% endcapture %}
                {{
                  block.settings.image
                  | image_url: width: 3200
                  | image_tag:
                    widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                    sizes: sizes,
                    class: ''
                }}
                {% if block.settings.sticker_image != blank %}
                  {% style %}
                    .sticker-image.sticker-block-{{ block.id }}{
                      position:absolute;
                      {% if block.settings.sticker_position_x == "sticker-x-left" %}
                        left:0;
                        --translateX: 0%;
                      {% elsif block.settings.sticker_position_x == "sticker-x-center" %}
                        left:0;
                        right:0;
                        margin-left:auto;
                        margin-right:auto;
                        --translateX: 0;
                      {% elsif block.settings.sticker_position_x == "sticker-x-right" %}
                        right:0;
                        --translateX: 0%;
                      {% endif %}
                      {% if block.settings.sticker_position_y == "sticker-y-top" %}
                        top:0;
                        --translateY: -50%;
                      {% elsif block.settings.sticker_position_y == "sticker-y-center" %}
                        top:0;
                        bottom:0;
                        margin-top:auto;
                        margin-bottom:auto;
                        --translateY: 0;
                      {% elsif block.settings.sticker_position_y == "sticker-y-bottom" %}
                        bottom:0;
                        --translateY: 50%;
                      {% endif %}
                      {% if block.settings.sticker_x_offset != blank %}
                        --translateX: {{ block.settings.sticker_x_offset }};
                      {% endif %}
                      {% if block.settings.sticker_y_offset != blank %}
                        --translateY: {{ block.settings.sticker_y_offset }};
                      {% endif %}

                      width:{{ block.settings.sticker_size_mobile }};
                      height:auto;

                      transform:translateX(var(--translateX)) translateY(var(--translateY)) rotate({{ block.settings.sticker_rotation }}deg);
                    }

                    @media screen and (min-width: 750px) {
                      .sticker-image.sticker-block-{{ block.id }}{
                        {% if block.settings.sticker_x_offset_desktop != blank %}
                          --translateX: {{ block.settings.sticker_x_offset_desktop }};
                        {% endif %}
                        {% if block.settings.sticker_y_offset_desktop != blank %}
                          --translateY: {{ block.settings.sticker_y_offset_desktop }};
                        {% endif %}
                        width:{{ block.settings.sticker_size_desktop }};
                      }
                    }
                  {% endstyle %}
                  {% capture sticker_classes %}
                    sticker-image
                    sticker-block-{{ block.id }}
                    {{ block.settings.sticker_position_x }}
                  {% endcapture %}
                  {% if block.settings.sticker_url %}
                    <a href="{{ block.settings.sticker_url }}">
                  {% endif %}
                  {{
                    block.settings.sticker_image
                    | image_url: width: 400
                    | image_tag:
                      widths: '50, 75, 100, 150, 200, 300, 400, 500, 750',
                      sizes: sizes,
                      class: sticker_classes
                  }}
                  {% if block.settings.sticker_url %}
                    </a>
                  {% endif %}
                {% endif %}
              </div>
            {% endif %}
          </li>
        {%- endfor -%}
      </ul>

      {%- if show_mobile_slider -%}
        <div class="slider-buttons large-up-hide">
          <button
            type="button"
            class="slider-button slider-button--prev"
            name="previous"
            aria-label="{{ 'general.slider.previous_slide' | t }}"
          >
            {% render 'icon-caret' %}
          </button>
          <div class="slider-counter caption">
            <span class="slider-counter--current">1</span>
            <span aria-hidden="true"> / </span>
            <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
            <span class="slider-counter--total">{{ section.blocks.size }}</span>
          </div>
          <button
            type="button"
            class="slider-button slider-button--next"
            name="next"
            aria-label="{{ 'general.slider.next_slide' | t }}"
          >
            {% render 'icon-caret' %}
          </button>
        </div>
      {%- endif -%}
    </slider-component>
    <div class="center{% if show_mobile_slider %} small-hide medium-hide{% endif %}">
      {%- if section.settings.button_label != blank -%}
        <a
          class="button button--primary"
          {% if section.settings.button_link == blank %}
            role="link" aria-disabled="true"
          {% else %}
            href="{{ section.settings.button_link }}"
          {% endif %}
        >
          {{ section.settings.button_label | escape }}
        </a>
      {%- endif -%}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.multicolumn.name",
  "class": "section",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "default": "t:sections.multicolumn.settings.title.default",
      "label": "t:sections.multicolumn.settings.title.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "hxl",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "hxxl",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "select",
      "id": "image_width",
      "options": [
        {
          "value": "third",
          "label": "t:sections.multicolumn.settings.image_width.options__1.label"
        },
        {
          "value": "half",
          "label": "t:sections.multicolumn.settings.image_width.options__2.label"
        },
        {
          "value": "full",
          "label": "t:sections.multicolumn.settings.image_width.options__3.label"
        }
      ],
      "default": "full",
      "label": "t:sections.multicolumn.settings.image_width.label"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.multicolumn.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.multicolumn.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.multicolumn.settings.image_ratio.options__3.label"
        },
        {
          "value": "circle",
          "label": "t:sections.multicolumn.settings.image_ratio.options__4.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.multicolumn.settings.image_ratio.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3,
      "label": "t:sections.multicolumn.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "column_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.multicolumn.settings.column_alignment.label"
    },
    {
      "type": "select",
      "id": "background_style",
      "options": [
        {
          "value": "none",
          "label": "t:sections.multicolumn.settings.background_style.options__1.label"
        },
        {
          "value": "primary",
          "label": "t:sections.multicolumn.settings.background_style.options__2.label"
        }
      ],
      "default": "primary",
      "label": "t:sections.multicolumn.settings.background_style.label"
    },
    {
      "type": "text",
      "id": "button_label",
      "default": "t:sections.multicolumn.settings.button_label.default",
      "label": "t:sections.multicolumn.settings.button_label.label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "t:sections.multicolumn.settings.button_link.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.multicolumn.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.multicolumn.settings.columns_mobile.label"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "default": false,
      "label": "t:sections.multicolumn.settings.swipe_on_mobile.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
      "type": "text",
      "id": "custom_padding",
      "label": "Custom Padding (CSS with Unit)"
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "t:sections.multicolumn.blocks.column.name",
      "settings": [
        {
          "type": "range",
          "id": "column_span_desktop",
          "min": 1,
          "max": 6,
          "step": 1,
          "label": "Desktop Column Span",
          "default": 1
        },
        {
          "type": "range",
          "id": "column_offset_left_desktop",
          "min": 0,
          "max": 5,
          "step": 1,
          "label": "Desktop Offset Left",
          "default": 0
        },
        {
          "type": "range",
          "id": "column_offset_right_desktop",
          "min": 0,
          "max": 5,
          "step": 1,
          "label": "Desktop Offset Right",
          "default": 0
        },
        {
          "type": "select",
          "id": "horizontal_align_desktop",
          "options": [
            {
              "value": "md:flex-align-start",
              "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.options__1"
            },
            {
              "value": "md:flex-align-center",
              "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.options__2"
            },
            {
              "value": "md:flex-align-end",
              "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.options__3"
            }
          ],
          "default": "md:flex-align-start",
          "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.label_desktop"
        },
        {
          "type": "select",
          "id": "vertical_align_desktop",
          "options": [
            {
              "value": "md:flex-justify-start",
              "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.options__1"
            },
            {
              "value": "md:flex-justify-center",
              "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.options__2"
            },
            {
              "value": "md:flex-justify-end",
              "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.options__3"
            }
          ],
          "default": "md:flex-justify-start",
          "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.label_desktop"
        },
        {
          "type": "select",
          "id": "horizontal_align_mobile",
          "options": [
            {
              "value": "flex-align-start",
              "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.options__1"
            },
            {
              "value": "flex-align-center",
              "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.options__2"
            },
            {
              "value": "flex-align-end",
              "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.options__3"
            }
          ],
          "default": "flex-align-start",
          "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.label_mobile"
        },
        {
          "type": "select",
          "id": "vertical_align_mobile",
          "options": [
            {
              "value": "flex-justify-start",
              "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.options__1"
            },
            {
              "value": "flex-justify-center",
              "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.options__2"
            },
            {
              "value": "flex-justify-end",
              "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.options__3"
            }
          ],
          "default": "flex-justify-start",
          "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.label_mobile"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.multicolumn.blocks.column.settings.image.label"
        },
        {
          "type": "richtext",
          "id": "title",
          "default": "t:sections.multicolumn.blocks.column.settings.title.default",
          "label": "t:sections.multicolumn.blocks.column.settings.title.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "t:sections.multicolumn.blocks.column.settings.text.default",
          "label": "t:sections.multicolumn.blocks.column.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_align_desktop",
          "options": [
            {
              "value": "md:text-left",
              "label": "t:sections.multicolumn.blocks.column.settings.text_align.options__1"
            },
            {
              "value": "md:text-center",
              "label": "t:sections.multicolumn.blocks.column.settings.text_align.options__2"
            },
            {
              "value": "md:text-right",
              "label": "t:sections.multicolumn.blocks.column.settings.text_align.options__3"
            }
          ],
          "default": "md:text-left",
          "label": "t:sections.multicolumn.blocks.column.settings.text_align.label_desktop"
        },
        {
          "type": "select",
          "id": "text_align_mobile",
          "options": [
            {
              "value": "text-left",
              "label": "t:sections.multicolumn.blocks.column.settings.text_align.options__1"
            },
            {
              "value": "text-center",
              "label": "t:sections.multicolumn.blocks.column.settings.text_align.options__2"
            },
            {
              "value": "text-right",
              "label": "t:sections.multicolumn.blocks.column.settings.text_align.options__3"
            }
          ],
          "default": "text-left",
          "label": "t:sections.multicolumn.blocks.column.settings.text_align.label_mobile"
        },
        {
          "type": "text",
          "id": "link_label",
          "label": "t:sections.multicolumn.blocks.column.settings.link_label.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.multicolumn.blocks.column.settings.link.label"
        },
        {
          "type": "select",
          "id": "link_type",
          "options": [
            {
              "value": "default",
              "label": "t:sections.multicolumn.blocks.column.settings.link_type.options__1"
            },
            {
              "value": "button",
              "label": "t:sections.multicolumn.blocks.column.settings.link_type.options__2"
            }
          ],
          "default": "default",
          "label": "t:sections.multicolumn.blocks.column.settings.link_type.label"
        },
        {
          "type": "image_picker",
          "id": "button_deco_image",
          "label": "Button Decorational Image"
        }
      ]
    },
    {
      "type": "image",
      "name": "t:sections.multicolumn.blocks.image.name",
      "settings": [
        {
          "type": "range",
          "id": "column_span_desktop",
          "min": 1,
          "max": 6,
          "step": 1,
          "label": "Desktop Column Span",
          "default": 1
        },
        {
          "type": "range",
          "id": "column_offset_left_desktop",
          "min": 0,
          "max": 5,
          "step": 1,
          "label": "Desktop Offset Left",
          "default": 0
        },
        {
          "type": "range",
          "id": "column_offset_right_desktop",
          "min": 0,
          "max": 5,
          "step": 1,
          "label": "Desktop Offset Right",
          "default": 0
        },
        {
          "type": "select",
          "id": "horizontal_align_desktop",
          "options": [
            {
              "value": "md:flex-align-start",
              "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.options__1"
            },
            {
              "value": "md:flex-align-center",
              "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.options__2"
            },
            {
              "value": "md:flex-align-end",
              "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.options__3"
            }
          ],
          "default": "md:flex-align-start",
          "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.label_desktop"
        },
        {
          "type": "select",
          "id": "vertical_align_desktop",
          "options": [
            {
              "value": "md:flex-justify-start",
              "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.options__1"
            },
            {
              "value": "md:flex-justify-center",
              "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.options__2"
            },
            {
              "value": "md:flex-justify-end",
              "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.options__3"
            }
          ],
          "default": "md:flex-justify-start",
          "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.label_desktop"
        },
        {
          "type": "select",
          "id": "horizontal_align_mobile",
          "options": [
            {
              "value": "flex-align-start",
              "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.options__1"
            },
            {
              "value": "flex-align-center",
              "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.options__2"
            },
            {
              "value": "flex-align-end",
              "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.options__3"
            }
          ],
          "default": "flex-align-start",
          "label": "t:sections.multicolumn.blocks.column.settings.horizontal_align.label_mobile"
        },
        {
          "type": "select",
          "id": "vertical_align_mobile",
          "options": [
            {
              "value": "flex-justify-start",
              "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.options__1"
            },
            {
              "value": "flex-justify-center",
              "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.options__2"
            },
            {
              "value": "flex-justify-end",
              "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.options__3"
            }
          ],
          "default": "flex-justify-start",
          "label": "t:sections.multicolumn.blocks.column.settings.vertical_align.label_mobile"
        },
        {
          "type": "number",
          "id": "mobile_order",
          "label": "Mobile Block Order"
        },
        {
          "type": "text",
          "id": "block_margin_top_desktop",
          "label": "margin Top Desktop"
        },
        {
          "type": "text",
          "id": "block_margin_bottom_desktop",
          "label": "margin Bottom Desktop"
        },
        {
          "type": "text",
          "id": "block_margin_top_mobile",
          "label": "margin Top Mobile"
        },
        {
          "type": "text",
          "id": "block_margin_bottom_mobile",
          "label": "margin Bottom Mobile"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.multicolumn.blocks.column.settings.image.label"
        },
        {
          "type": "header",
          "content": "Sticker"
        },
        {
          "type": "image_picker",
          "id": "sticker_image",
          "label": "Sticker"
        },
        {
          "type": "select",
          "id": "sticker_position_x",
          "options": [
            {
              "value": "sticker-x-left",
              "label": "Left"
            },
            {
              "value": "sticker-x-center",
              "label": "Center"
            },
            {
              "value": "sticker-x-right",
              "label": "Right"
            }
          ],
          "default": "sticker-x-left",
          "label": "Sticker Position Horizontal"
        },
        {
          "type": "select",
          "id": "sticker_position_y",
          "options": [
            {
              "value": "sticker-y-top",
              "label": "Top"
            },
            {
              "value": "sticker-y-center",
              "label": "Center"
            },
            {
              "value": "sticker-y-bottom",
              "label": "Bottom"
            }
          ],
          "default": "sticker-y-top",
          "label": "Sticker Position Vertical"
        },
        {
          "type": "text",
          "id": "sticker_x_offset",
          "label": "Sticker Horizontal Offset"
        },
        {
          "type": "text",
          "id": "sticker_y_offset",
          "label": "Sticker Vertical Offset"
        },
        {
          "type": "text",
          "id": "sticker_x_offset_desktop",
          "label": "Sticker Horizontal Offset Desktop"
        },
        {
          "type": "text",
          "id": "sticker_y_offset_desktop",
          "label": "Sticker Vertical Offset Desktop"
        },
        {
          "type": "text",
          "id": "sticker_size_desktop",
          "label": "Sticker Size Desktop"
        },
        {
          "type": "text",
          "id": "sticker_size_mobile",
          "label": "Sticker Size Mobile"
        },
        {
          "type": "number",
          "id": "sticker_rotation",
          "label": "Sticker Rotation"
        },
        {
          "type": "url",
          "id": "sticker_url",
          "label": "Sticker Link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.multicolumn.presets.name",
      "blocks": [
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}
